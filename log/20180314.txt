----------------------------------------------------
2018/03/14 15:54:41
INSERT INTO gjt_article(title,author,intro,content,time,tid)VALUES('PAT 乙级 1052.卖个萌','原创','萌萌哒表情符号通常由“手”、“眼”、“口”三个主要部分组成。简单起见，我们假设一个表情符号是按下列格式输出的：

[左手]([左眼][口][右眼])[右手]
现给出可选用的符号集合，请你按用户的要求输出表情。','<p style="text-indent:2em;">
<pre class="prettyprint lang-cpp">
	<p style="font-family:&quot;vertical-align:baseline;color:#333333;background-color:#FAFAFA;">
		萌萌哒表情符号通常由“手”、“眼”、“口”三个主要部分组成。简单起见，我们假设一个表情符号是按下列格式输出的：
	</p>

<pre>[左手]([左眼][口][右眼])[右手]</pre>
	<p style="font-family:&quot;vertical-align:baseline;color:#333333;background-color:#FAFAFA;">
		现给出可选用的符号集合，请你按用户的要求输出表情。
	</p>
	<p style="font-family:&quot;vertical-align:baseline;color:#333333;background-color:#FAFAFA;">
		<b>输入格式：</b>
	</p>
	<p style="font-family:&quot;vertical-align:baseline;color:#333333;background-color:#FAFAFA;">
		输入首先在前三行顺序对应给出手、眼、口的可选符号集。每个符号括在一对方括号[]内。题目保证每个集合都至少有一个符号，并不超过10个符号；每个符号包含1到4个非空字符。
	</p>
	<p style="font-family:&quot;vertical-align:baseline;color:#333333;background-color:#FAFAFA;">
		之后一行给出一个正整数K，为用户请求的个数。随后K行，每行给出一个用户的符号选择，顺序为左手、左眼、口、右眼、右手——这里只给出符号在相应集合中的序号（从1开始），数字间以空格分隔。
	</p>
	<p style="font-family:&quot;vertical-align:baseline;color:#333333;background-color:#FAFAFA;">
		<b>输出格式：</b>
	</p>
	<p style="font-family:&quot;vertical-align:baseline;color:#333333;background-color:#FAFAFA;">
		对每个用户请求，在一行中输出生成的表情。若用户选择的序号不存在，则输出“Are you kidding me? @\/@”。
	</p>
<b>输入样例：</b> 
<pre>[╮][╭][o][~\][/~]  [&lt;][&gt;]
 [╯][╰][^][-][=][&gt;][&lt;][@][⊙]
[Д][▽][_][ε][^]  ...
4
1 1 2 2 2
6 8 1 5 5
3 3 4 3 3
2 10 3 9 3
</pre>
<b>输出样例：</b> 
<pre>╮(╯▽╰)╭
&lt;(@Д=)/~
o(^ε^)o
Are you kidding me? @\/@</pre>
<br />
</pre>
<pre class="prettyprint lang-cpp"></pre>
<pre class="prettyprint lang-cpp"></pre>
<pre class="prettyprint lang-cpp">#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
int get(char p[][10]);
typedef struct Person{
  int  lh;
  int  le;
  int  mouth;
  int  ye;
  int  yh;
}Person;
int main()
{
  char hand[10][10],eye[10][10],mouth[10][10];
  int hl,el,ml,i,num;
  hl=get(hand);
  el=get(eye);
  ml=get(mouth);
  scanf("%d",&amp;num);
  Person* arr=(Person*)malloc(sizeof(Person)*num);
  for(i=0;i&lt;num;i++){
    scanf("%d %d %d %d %d",&amp;arr[i].lh,&amp;arr[i].le,&amp;arr[i].mouth,&amp;arr[i].ye,&amp;arr[i].yh);
  }
  for(i=0;i&lt;num;i++)
  {
    if(arr[i].lh&gt;hl || arr[i].le&gt; el ||arr[i].mouth&gt; ml || arr[i].ye&gt;el || arr[i].yh&gt;hl || arr[i].lh&lt;=0 ||arr[i].le&lt;=0 ||arr[i].mouth&lt;=0 || arr[i].ye&lt;=0 || arr[i].yh&lt;=0){
      printf("Are you kidding me? @\\/@\n");
    }else{
      printf("%s",hand[arr[i].lh-1]);
      printf("(");
      printf("%s%s%s",eye[arr[i].le-1],mouth[arr[i].mouth-1],eye[arr[i].ye-1]);
      printf(")");
      printf("%s",hand[arr[i].yh-1]);
      printf("\n");
    }

  }
  return 0;
}

int  get(char p[][10])
{
    int i=0,j=0, c;
    int count=0;
    while((c=getchar())!='\n')
    {
       if(c=='[')
        j=0;
      if(c!='['&amp;&amp;c!=']'&amp;&amp;c!=' ')
      {
        p[i][j++] = c;
      }
      if(c==']')
      {
        p[i][j] = '\0';
        i++;
      }
    }   
  count=i;
    return count;//返回字符集中符号个数
}</pre>
</p>','1521042881','26')
You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '\n')
    {
       if(c=='[')
        j=0;
      if(c!='['&amp;&amp;c!=']'&am' at line 1
----------------------------------------------------

----------------------------------------------------
2018/03/14 15:57:51
INSERT INTO gjt_article(title,author,intro,content,time,tid)VALUES('PAT 乙级 1052.卖个萌','原创','#include <stdio.h>
#include <stdlib.h>
#include <string.h>
int get(char p[][10]);
typedef struct Person{
  int  lh;
  int  le;
  int  mouth;
  int  ye;
  int  yh;
}Person;
int main()
{
  char hand[10][10],eye[10][10],mouth[10][10];
  int hl,el,ml,i,num;
  hl=get(hand);
  el=get(eye);
  ml=get(mouth);
  scanf("%d",&num);
  Person* arr=(Person*)malloc(sizeof(Person)*num);
  for(i=0;i<num;i++){
    scanf("%d %d %d %d %d",&arr[i].lh,&arr[i].le,&arr[i].mouth,&arr[i].ye,&arr[i].yh);
  }
  for(i=0;i<num;i++)
  {
    if(arr[i].lh>hl || arr[i].le> el ||arr[i].mouth> ml || arr[i].ye>el || arr[i].yh>hl || arr[i].lh<=0 ||arr[i].le<=0 ||arr[i].mouth<=0 || arr[i].ye<=0 || arr[i].yh<=0){
      printf("Are you kidding me? @\\/@\n");
    }else{
      printf("%s",hand[arr[i].lh-1]);
      printf("(");
      printf("%s%s%s",eye[arr[i].le-1],mouth[arr[i].mouth-1],eye[arr[i].ye-1]);
      printf(")");
      printf("%s",hand[arr[i].yh-1]);
      printf("\n");
    }

  }
  return 0;
}

int  get(char p[][10])
{
    int i=0,j=0, c;
    int count=0;
    while((c=getchar())!='\n')
    {
       if(c=='[')
        j=0;
      if(c!='['&&c!=']'&&c!=' ')
      {
        p[i][j++] = c;
      }
      if(c==']')
      {
        p[i][j] = '\0';
        i++;
      }
    }   
  count=i;
    return count;//返回字符集中符号个数
}','请输入文章内容','1521043071','26')
You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '\n')
    {
       if(c=='[')
        j=0;
      if(c!='['&&c!=']'&&c!=' ')
' at line 1
----------------------------------------------------

----------------------------------------------------
2018/03/14 16:00:23
UPDATE gjt_article SET title='PAT 乙级 1052.卖个萌',author='原创',intro='萌萌哒表情符号通常由“手”、“眼”、“口”三个主要部分组成。简单起见，我们假设一个表情符号是按下列格式输出的：

[左手]([左眼][口][右眼])[右手]
现给出可选用的符号集合，请你按用户的要求输出表情。

输入格式：

输入首先在前三行顺序对应给出手、眼、口的可选符号集。每个符号括在一对方括号[]内。题目保证每个集合都至少有一个符号，并不超过10个符号；每个符号包含1到4个非空字符。

之后一行给出一个正整数K，为用户请求的个数。随后K行，每行给出一个用户的符号选择，顺序为左手、左眼、口、右眼、右手——这里只给出符号在相应集合中的序号（从1开始），数字间以空格分隔。

输出格式：

对每个用户请求，在一行中输出生成的表情。若用户选择的序号不存在，则输出“Are you kidding me? @/@”。

输入样例：
[╮][╭][o][~][/~]  [<][>]
 [╯][╰][^][-][=][>][<][@][⊙]
[Д][▽][_][ε][^]  ...
4
1 1 2 2 2
6 8 1 5 5
3 3 4 3 3
2 10 3 9 3
输出样例：
╮(╯▽╰)╭
<(@Д=)/~
o(^ε^)o
Are you kidding me? @/@',content='#include <stdio.h>
#include <stdlib.h>
#include <string.h>
int get(char p[][10]);
typedef struct Person{
  int  lh;
  int  le;
  int  mouth;
  int  ye;
  int  yh;
}Person;
int main()
{
  char hand[10][10],eye[10][10],mouth[10][10];
  int hl,el,ml,i,num;
  hl=get(hand);
  el=get(eye);
  ml=get(mouth);
  scanf("%d",&amp;num);
  Person* arr=(Person*)malloc(sizeof(Person)*num);
  for(i=0;i<num;i++){ scanf("%d="" %d="" %d",&arr[i].lh,&arr[i].le,&arr[i].mouth,&arr[i].ye,&arr[i].yh);="" }="" for(i="0;i<num;i++)" {="" if(arr[i].lh="">hl || arr[i].le&gt; el ||arr[i].mouth&gt; ml || arr[i].ye&gt;el || arr[i].yh&gt;hl || arr[i].lh&lt;=0 ||arr[i].le&lt;=0 ||arr[i].mouth&lt;=0 || arr[i].ye&lt;=0 || arr[i].yh&lt;=0){ printf("Are you kidding me? @\\/@\n"); }else{ printf("%s",hand[arr[i].lh-1]); printf("("); printf("%s%s%s",eye[arr[i].le-1],mouth[arr[i].mouth-1],eye[arr[i].ye-1]); printf(")"); printf("%s",hand[arr[i].yh-1]); printf("\n"); } } return 0; } int get(char p[][10]) { int i=0,j=0, c; int count=0; while((c=getchar())!='\n') { if(c=='[') j=0; if(c!='['&amp;&amp;c!=']'&amp;&amp;c!=' ') { p[i][j++] = c; } if(c==']') { p[i][j] = '\0'; i++; } } count=i; return count;//返回字符集中符号个数 }</num;i++){></string.h></stdlib.h></stdio.h>',time='1521043223' WHERE aid=42
You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '\n') { if(c=='[') j=0; if(c!='['&amp;&amp;c!=']'&amp;&amp;c!=' ') { p[i][j++] = ' at line 1
----------------------------------------------------

